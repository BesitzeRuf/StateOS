#include <stm32f4_discovery.h>
#include <os.h>
#include <stdlib.h>

// Sleeping barber problem

#define DELAY  256
#define CHAIRS 4 // num of chairs in waiting room

OS_SEM(chairs, CHAIRS);
OS_SEM(barbers, 0);
OS_SEM(customers, 0);
OS_SEM(end_of_haircut, 0);

void cut_hair()
{
	static cnt_t dly = 0;

	dly = (dly + 4) % DELAY;
	tsk_delay(dly * MSEC);

	sem_give(end_of_haircut);
}

void get_haircut()
{
	LED_Tick();

	sem_wait(end_of_haircut);
}

void barber()
{
	for (;;)
	{
		sem_give(barbers);
		sem_wait(customers);
		cut_hair();
	}
}

void customer()
{
	if (sem_take(chairs) == E_SUCCESS)
	{
		sem_give(customers);
		sem_wait(barbers);
		sem_give(chairs);
		get_haircut();
	}

	tsk_detach(tsk_this());
	tsk_stop();
}		

int main()
{
	cnt_t dly;

	srand(0);
	LED_Init();

	tsk_create(1, barber);
	tsk_create(1, barber);

	for (;;)
	{
		tsk_create(1, customer);

		dly = (rand() % DELAY) * MSEC;
		tsk_delay(dly);
	}
}

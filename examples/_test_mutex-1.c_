#include <stm32f4_discovery.h>
#include <os.h>

OS_MTX(mtx, mtxPrioInherit);

void master()
{
	if (mtx_wait(mtx) == E_SUCCESS)
	{
		mtx_give(mtx);
		LEDs = 15;     // OK
	}

	for (;;) LEDG = 1; // BREAKPOINT: 1 (priority inheritance mutex)
}

OS_TSK(mas, 2, master);

void slave()
{
	tsk_start(mas);

	for (;;) LEDB = 1; // BREAKPOINT: 2 (fast mutex)
}

OS_TSK(sla, 1, slave);

int main()
{
	LED_Init();
	
	if (mtx_wait(mtx) == E_SUCCESS)
	{
		tsk_start(sla);
		mtx_give(mtx);
	}

	for (;;) LEDR = 1; // BREAKPOINT: 3 (error)
}
